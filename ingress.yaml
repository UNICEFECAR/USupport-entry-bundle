apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: ingress-nginx
  namespace: default
  annotations:
    nginx.ingress.kubernetes.io/ssl-redirect: "true"
    nginx.ingress.kubernetes.io/force-ssl-redirect: "true"
    nginx.ingress.kubernetes.io/from-to-www-redirect: "true"
    nginx.ingress.kubernetes.io/configuration-snippet: |
      include                     /etc/nginx/mime.types;
      more_set_headers "Access-Control-Max-Age: 600";
      more_set_headers "X-XSS-Protection: 1; mode=block";
      more_set_headers "X-Content-Type-Options: nosniff";
      more_set_headers "Vary: Origin";
      more_set_headers "Cache-Control: no-store, no-cache, private";
      more_set_headers "Strict-Transport-Security: max-age=31536000";
    nginx.ingress.kubernetes.io/proxy-body-size: "100m"
    nginx.org/client-max-body-size: "100m"
spec:
  ingressClassName: nginx
  rules:
    - host: usupport.online
      http:
        paths:
          - path: /
            pathType: Prefix
            backend:
              service:
                name: webproxy-service
                port:
                  number: 80
    - host: staging.usupport.online
      http:
        paths:
          - path: /
            pathType: Prefix
            backend:
              service:
                name: webproxy-service
                port:
                  number: 80
  tls:
    - hosts: # Add each external domain name within the list below to get a valid certificate
        - "staging.usupport.online"
        - "usupport.online"
      secretName: tls-secret
