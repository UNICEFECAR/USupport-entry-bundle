user                          nginx nginx;
worker_processes              auto;
pid                           /var/run/nginx.pid;

include                       /etc/nginx/modules-enabled/*.conf;

# provides the configuration file context in which the directives that affect connection processing are specified.
events {
  # determines how much clients will be served per worker
  # max clients = worker_connections * worker_processes
  # max clients is also limited by the number of socket connections available on the system (~64k)
  worker_connections          768;

}

http { 
  map $http_upgrade $connection_upgrade {
    default upgrade;
    ''
    close;
  }

  tcp_nopush                  on; # send headers in one piece - better than sending them one by one
  tcp_nodelay                 on; # don't buffer data sent - good for small data bursts in real time
  keepalive_timeout           65; # server will close connection after this time -- default 75
  types_hash_max_size         2048;
  
  server_tokens               off;

  include                     /etc/nginx/mime.types;
  default_type                application/octet-stream;

  ##
  # SSL Settings
  ##
  ssl_protocols               TLSv1.2 TLSv1.3;
  ssl_prefer_server_ciphers   on;
  ssl_session_cache           shared:SSL:10m;
  ssl_session_timeout         10m;

  ##
  # Logging Settings
  ##
  log_format                  main_log  '$remote_addr - $remote_user [$time_local] "$request" '
                                        '$status $body_bytes_sent "$http_referer" '
                                        '"$http_user_agent" "$http_x_forwarded_for" ';

  access_log                  /var/log/nginx/access.log main_log;
  # only log critical errors
  error_log                   /var/log/nginx/error.log crit;
 
  ##
  # Gzip Settings
  ##
  gzip                        on;
  gzip_min_length             1000;
  gzip_comp_level             6;
  gzip_proxied                any;
  gzip_vary                   on;
  gzip_types                  application/atom+xml
                              application/geo+json
                              application/javascript
                              application/x-javascript
                              application/json
                              application/ld+json
                              application/manifest+json
                              application/rdf+xml
                              application/rss+xml
                              application/vnd.ms-fontobject
                              application/wasm
                              application/x-web-app-manifest+json
                              application/xhtml+xml
                              application/xml
                              font/eot
                              font/otf
                              font/ttf
                              image/bmp
                              image/svg+xml
                              image/gif
                              image/png
                              image/jpeg
                              image/x-icon
                              text/cache-manifest
                              text/calendar
                              text/css
                              text/javascript
                              text/markdown
                              text/plain
                              text/xml
                              text/vcard
                              text/vnd.rim.location.xloc
                              text/vtt
                              text/x-component
                              text/x-cross-domain-policy;
 
  ##
  # Virtual Host Configs
  ##
  include                     /etc/nginx/conf.d/*.conf;
  include                     /etc/nginx/sites-enabled/*;

  server {
    listen                    80;
    listen                    [::]:80;
    # To add more external domains which will be redirected to this server block, add them to the server_name list
    server_name               usupport.online www.usupport.online *.usupport.online;

    root                      /usr/share/nginx/html/website;
    keepalive_timeout         75;

    if ($request_uri ~* ^/api/?) {rewrite ^/(.*)$ /$1 break;}
    if ($request_uri ~* ^/cms/?) {rewrite ^/(.*)$ /$1 break;}

    # To add more external domains which will be used to redirect to the correct subfolder, add them to the OR list in each if statement below
    # The format is as follows: if ($http_referer ~ ^https?://(domain1|domain2|domain3)/subfolder/?) {rewrite ^ /subfolder$uri break;}
    if ($http_referer ~ ^https?://(usupport.online|poland.usupport.online|kazakhstan.usupport.online|romania.usupport.online)/client/?) {rewrite ^ /client$uri break;}
    if ($http_referer ~ ^https?://(usupport.online|poland.usupport.online|kazakhstan.usupport.online|romania.usupport.online)/provider/?) {rewrite ^ /provider$uri break;}
    if ($http_referer ~ ^https?://(usupport.online|poland.usupport.online|kazakhstan.usupport.online|romania.usupport.online)/country-admin/?) {rewrite ^ /country-admin$uri break;}
    if ($http_referer ~ ^https?://usupport.online/global-admin/?) {rewrite ^ /global-admin$uri break;}
    if ($http_referer ~ ^https?://usupport.online/cms/?) {rewrite ^ /cms$uri break;}

    location / {
      try_files $uri $uri/ /index.html;
      index  index.html index.htm;
    }

    location /client {
      root   /usr/share/nginx/html;
      try_files $uri $uri/ /client/index.html;  
      index  index.html index.htm;
    }

    location /provider {
      root   /usr/share/nginx/html;
      try_files $uri $uri/ /provider/index.html;  
      index  index.html index.htm;
    }

    location /country-admin {
      root   /usr/share/nginx/html;
      try_files $uri $uri/ /country-admin/index.html;  
      index  index.html index.htm;
    }

    location /global-admin {
      root   /usr/share/nginx/html;
      try_files $uri $uri/ /global-admin/index.html;  
      index  index.html index.htm;
    }

    location /api {
      proxy_intercept_errors  on;

      proxy_pass              http://gateway-service:3000/api;

      proxy_set_header        Host $host;
      proxy_set_header        X-Real-IP $remote_addr;
      proxy_set_header        X-Forwarded-For $proxy_add_x_forwarded_for;
      proxy_set_header        X-Forwarded-Proto $scheme;

      # proxy_read_timeout      90;
      proxy_redirect          off;

      # following needed for Websocket support
      proxy_http_version      1.1;
      proxy_set_header        Upgrade $http_upgrade;
      proxy_set_header        Connection "upgrade";
    }

    location /cms {
      rewrite ^/cms/?(.*)$ /$1 break;
      proxy_intercept_errors  on;

      proxy_pass              http://cms-service:3009;

      proxy_set_header        Host $host;
      proxy_set_header        X-Real-IP $remote_addr;
      proxy_set_header        X-Forwarded-For $proxy_add_x_forwarded_for;
      proxy_set_header        X-Forwarded-Proto $scheme;

      # proxy_read_timeout      90;
      proxy_redirect          off;
      proxy_pass_request_headers on;

      # following needed for Websocket support
      proxy_http_version      1.1;
      proxy_set_header        Upgrade $http_upgrade;
      proxy_set_header        Connection "upgrade";
    }
  }

}